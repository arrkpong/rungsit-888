คำสั่งพื้นฐาน
ตั้งค่าเริ่มต้น
git config --global user.name "ชื่อของคุณ" : ตั้งค่าชื่อผู้ใช้งาน
git config --global user.email "อีเมลของคุณ" : ตั้งค่าอีเมลผู้ใช้งาน

เริ่มต้นโครงการใหม่
git init : สร้างโครงการ Git ใหม่ในไดเรกทอรีปัจจุบัน
git clone [url] : คัดลอกโครงการ Git จากที่เก็บระยะไกล

ตรวจสอบสถานะ
git status : ตรวจสอบสถานะของไฟล์ในไดเรกทอรีที่ใช้งานอยู่
git diff : แสดงความแตกต่างระหว่างไฟล์ที่ยังไม่ได้จัดเก็บ

คำสั่งการจัดการไฟล์
เพิ่มไฟล์
git add [ไฟล์] : เพิ่มไฟล์ลงใน staging area
git add . : เพิ่มไฟล์ทั้งหมดในไดเรกทอรีลงใน staging area

จัดเก็บการเปลี่ยนแปลง
git commit -m "update" : จัดเก็บการเปลี่ยนแปลงพร้อมกับข้อความคำอธิบาย
git commit -a -m "ข้อความ commit" : จัดเก็บการเปลี่ยนแปลงทั้งหมดของไฟล์ที่ถูกติดตามโดยอัตโนมัติ

ลบและเปลี่ยนชื่อไฟล์
git rm [ไฟล์] : ลบไฟล์จากการติดตามของ Git
git mv [ไฟล์เดิม] [ไฟล์ใหม่] : เปลี่ยนชื่อหรือย้ายไฟล์

คำสั่งการจัดการสาขา (Branch)
สร้างและย้ายไปยังสาขาใหม่
git branch [ชื่อสาขา] : สร้างสาขาใหม่
git checkout -b [ชื่อสาขา] : สร้างและย้ายไปยังสาขาใหม่
git checkout [ชื่อสาขา] : ย้ายไปยังสาขาที่มีอยู่

รวมสาขา
git merge [ชื่อสาขา] : รวมสาขาที่ระบุเข้ากับสาขาปัจจุบัน

ลบสาขา
git branch -d [ชื่อสาขา] : ลบสาขาที่ระบุ (หลังจากที่ได้รวมสาขาแล้ว)
git branch -D [ชื่อสาขา] : ลบสาขาที่ระบุ (แม้ว่าจะยังไม่ได้รวม)

คำสั่งการทำงานร่วมกัน
ส่งการเปลี่ยนแปลงไปที่เก็บระยะไกล
git push [remote] [branch] : ส่งการเปลี่ยนแปลงไปยังสาขาที่ระบุในที่เก็บระยะไกล
git push --force origin main : ส่งการเปลี่ยนแปลงในการทับข้อมูลไปยังสาขาที่ระบุในที่เก็บระยะไกล

ดึงการเปลี่ยนแปลงจากที่เก็บระยะไกล
git pull [remote] : ดึงการเปลี่ยนแปลงจากที่เก็บระยะไกลและรวมเข้ากับสาขาปัจจุบัน
git fetch [remote] : ดึงการเปลี่ยนแปลงจากที่เก็บระยะไกลโดยไม่รวมเข้ากับสาขาปัจจุบัน

คำสั่งอื่นๆที่สำคัญ
ดูประวัติการ commit
git log : ดูประวัติการ commit ทั้งหมด
git log --oneline : ดูประวัติการ commit แบบสั้นๆ

ยกเลิกการเปลี่ยนแปลง
git reset --hard [commit] : ย้อนกลับไปยัง commit ที่ระบุโดยลบการเปลี่ยนแปลงทั้งหมดหลังจากนั้น
git revert [commit] : สร้าง commit ใหม่ที่เป็นการยกเลิกการเปลี่ยนแปลงของ commit ที่ระบุ

สร้างแท็ก (Tag)
git tag [ชื่อแท็ก] : สร้างแท็กใหม่ใน commit ปัจจุบัน
git tag -a [ชื่อแท็ก] -m "ข้อความแท็ก" : สร้างแท็กที่มีข้อความกำกับ